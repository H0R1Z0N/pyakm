#!/usr/bin/python

import gi
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk
from pyakm.kernel_module import *
from pyakm.gui_manager import *
import sys, re

import threading

class MainApp:

    def __init__(self):

        self.builder = Gtk.Builder()
        self.builder.add_from_file("/usr/share/pyakm/ui/manager.ui")
        self.window = self.builder.get_object("window1")

        self.kernels = ['linux', 'linux-lts', 'linux-zen']
        
        self.kernel_name = self.kernels[0]
        
        self.treeview = create_treeview1(self.builder)

        self.select = self.treeview.get_selection()
        self.select.connect("changed", self.onTreeSelectionChanged)

        self.refreshButton = self.builder.get_object("refresh_button")
        self.refreshButton.connect("clicked", self.onClickRefreshButton)

        
        thread = threading.Thread(target=self.updateListStore)
        thread.daemon = True
        thread.start()
        #self.updateListstore()
        
    def updateListstore(self):

        self.packages = grab_kernel_packages_by_name(self.kernel_name)
        self.packages = sort_and_filter_packages(self.kernel_name, self.packages)
        self.liststore = populate_list_store_from_packages(self.packages, self.kernel_name)
        self.treeview.set_model(self.liststore)

        
    def onClickRefreshButton(self, button):
        self.kernel_name = self.kernels[1]
        self.updateListstore()
        
    def onTreeSelectionChanged(self, selection):
        model, treeiter = selection.get_selected()
        if treeiter != None:
            print("You selected", model[treeiter][0],
                  model[treeiter][1], model[treeiter][2])

app = MainApp()
app.window.connect("delete-event", Gtk.main_quit)
app.window.show_all()
Gtk.main()
